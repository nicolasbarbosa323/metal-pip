-- Criando a Tool (item)
local tool = Instance.new("Tool")
tool.Name = "SoundItem"
tool.RequiresHandle = true

-- Criando o Handle (parte física da ferramenta)
local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(1, 5, 1)
handle.Anchored = false
handle.CanCollide = false
handle.Parent = tool

-- Adicionando a Tool ao jogador
tool.Parent = game.Players.LocalPlayer.Backpack

-- Adicionando o som ao item
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://17803968700"
sound.Volume = 4  -- Volume ajustado
sound.Parent = handle

-- Função para tocar a animação e só tocar som se acertar alguém
tool.Activated:Connect(function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return end

    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid then return end

    -- Criar e tocar a animação
    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://218504594"

    local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
    local animationTrack = animator:LoadAnimation(anim)
    animationTrack:Play()

    -- Verificar se atingiu outro jogador
    task.wait(0.1)  -- pequeno delay após a animação iniciar

    local origin = character.HumanoidRootPart.Position
    local direction = character.HumanoidRootPart.CFrame.LookVector * 5
    local ray = Ray.new(origin, direction)
    local hit, pos = workspace:FindPartOnRayWithIgnoreList(ray, {character})

    if hit and hit.Parent and hit.Parent:FindFirstChild("Humanoid") then
        local targetHumanoid = hit.Parent:FindFirstChild("Humanoid")
        local targetCharacter = hit.Parent

        -- Toca o som apenas se acertar outro jogador
        sound:Play()

        -- Ativa ragdoll no alvo
        targetHumanoid.PlatformStand = true
        targetHumanoid:ChangeState(Enum.HumanoidStateType.Physics)

        for _, part in pairs(targetCharacter:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
                part.Anchored = false

                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                bodyVelocity.Velocity = (targetCharacter.HumanoidRootPart.Position - character.HumanoidRootPart.Position).unit * 100
                bodyVelocity.Parent = part

                local bodyForce = Instance.new("BodyVelocity")
                bodyForce.MaxForce = Vector3.new(0, 10000, 0)
                bodyForce.Velocity = Vector3.new(0, -50, 0)
                bodyForce.Parent = part
            end
        end

        game:GetService("Debris"):AddItem(targetCharacter, 2)
    end
end)
